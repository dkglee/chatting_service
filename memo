이전에서 나왔던 문제
 - 단순 문법상 문제였다.
 - rvalue와 lvalue에 대한 개념을 확실히 할것
 - constructor와 destructor를 확실하게 정의해 놓을것
 - lamda의 반환형 혹은 타입에 대해서 명확하게 알아놓을것
 - template의 다형성을 만족하기 위한 방법
 - multithread 환경 구축

 이제 해결해야할 문제
 - 기능 구축

// read 입력이 들어오는 경우
// 1. 클라이언트의 작업이 끝나면 스스로 읽기 요청을 건네는 경우
// 2. 스레드가 자신의 차례가 아니라 넘기는 경우

// read(cli)를 하고 있는데 write(ano) 요청이 들어옴. 반대로 write(ano)를 하고 있는데 read(cli) 요청이 들어옴. write(ano)를 하고 있는데 write(cli) 요청이 들어옴
// 그냥 다시 보내면 됨. 어차피 한번 epoll_wait을 한 순간 내용이 변경되지 않음.
// 근데 이건 테스트 해봐야할듯.

// 이미 처리중인 데이터가 중간에 바뀔 수 있는지 확인해 봐야겠다. 커널에서 복사한 데이터를 건네주는 건지 아니면 포인터만 넘기는건지.
// ==> 복사한 데이터를 건네주는 것으로 확인됨. 그러므로 중간에 바뀔 일은 없다.
